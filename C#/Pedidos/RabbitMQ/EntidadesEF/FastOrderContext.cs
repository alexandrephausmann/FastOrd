// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.Extensions.Configuration;

#nullable disable

namespace Pedidos.Domain.EntidadesEF
{
    public partial class FastOrderContext : DbContext
    {
        public IConfiguration _configuracao { get; }
        public FastOrderContext(IConfiguration configuracao)
        {
            _configuracao = configuracao;
        }

        public FastOrderContext(DbContextOptions<FastOrderContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TbItemPedido> TbItemPedido { get; set; }
        public virtual DbSet<TbPedido> TbPedido { get; set; }
        public virtual DbSet<TbProduto> TbProduto { get; set; }
        public virtual DbSet<TbProdutoIntegracao> TbProdutoIntegracao { get; set; }
        public virtual DbSet<TbStatusPedido> TbStatusPedido { get; set; }
        public virtual DbSet<TbTipoIntegracao> TbTipoIntegracao { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {      
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer(_configuracao["ConnectionStrings:FastOrderDatabase"]);
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Latin1_General_CI_AS");

            modelBuilder.Entity<TbItemPedido>(entity =>
            {
                entity.HasKey(e => new { e.CodPedido, e.CodItemPedido })
                    .HasName("PK__TB_ITEM___391D2585A3052C65");

                entity.ToTable("TB_ITEM_PEDIDO");

                entity.Property(e => e.CodPedido).HasColumnName("COD_PEDIDO");

                entity.Property(e => e.CodItemPedido).HasColumnName("COD_ITEM_PEDIDO");

                entity.Property(e => e.CodProduto).HasColumnName("COD_PRODUTO");

                entity.Property(e => e.Quantidade).HasColumnName("QUANTIDADE");

                entity.HasOne(d => d.CodProdutoNavigation)
                    .WithMany(p => p.TbItemPedido)
                    .HasForeignKey(d => d.CodProduto)
                    .HasConstraintName("FK__TB_ITEM_P__COD_P__59FA5E80");
            });

            modelBuilder.Entity<TbPedido>(entity =>
            {
                entity.HasKey(e => e.CodPedido)
                    .HasName("PK__TB_PEDID__302BFB8001D147DB");

                entity.ToTable("TB_PEDIDO");

                entity.Property(e => e.CodPedido).HasColumnName("COD_PEDIDO");

                entity.Property(e => e.Bairro)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("BAIRRO");

                entity.Property(e => e.Cep)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CEP");

                entity.Property(e => e.CodStatusPedido).HasColumnName("COD_STATUS_PEDIDO");

                entity.Property(e => e.CodTipoIntegracao).HasColumnName("COD_TIPO_INTEGRACAO");

                entity.Property(e => e.DadoComplementar)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DADO_COMPLEMENTAR");

                entity.Property(e => e.NumCelular)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUM_CELULAR");

                entity.Property(e => e.NumResidencia).HasColumnName("NUM_RESIDENCIA");

                entity.Property(e => e.Retirada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RETIRADA");

                entity.Property(e => e.Rua)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("RUA");

                entity.HasOne(d => d.CodStatusPedidoNavigation)
                    .WithMany(p => p.TbPedido)
                    .HasForeignKey(d => d.CodStatusPedido)
                    .HasConstraintName("FK__TB_PEDIDO__COD_S__571DF1D5");

                entity.HasOne(d => d.CodTipoIntegracaoNavigation)
                    .WithMany(p => p.TbPedido)
                    .HasForeignKey(d => d.CodTipoIntegracao)
                    .HasConstraintName("FK__TB_PEDIDO__COD_T__5629CD9C");
            });

            modelBuilder.Entity<TbProduto>(entity =>
            {
                entity.HasKey(e => e.CodProduto)
                    .HasName("PK__TB_PRODU__AAF2697D78854622");

                entity.ToTable("TB_PRODUTO");

                entity.Property(e => e.CodProduto).HasColumnName("COD_PRODUTO");

                entity.Property(e => e.DescProduto)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DESC_PRODUTO");

                entity.Property(e => e.ValorProduto).HasColumnName("VALOR_PRODUTO");
            });

            modelBuilder.Entity<TbProdutoIntegracao>(entity =>
            {
                entity.HasKey(e => new { e.CodProdutoFastorder, e.CodProdutoExterno })
                    .HasName("PK__TB_PRODU__16241E49A05B3575");

                entity.ToTable("TB_PRODUTO_INTEGRACAO");

                entity.Property(e => e.CodProdutoFastorder).HasColumnName("COD_PRODUTO_FASTORDER");

                entity.Property(e => e.CodProdutoExterno).HasColumnName("COD_PRODUTO_EXTERNO");

                entity.Property(e => e.CodTipoIntegracao).HasColumnName("COD_TIPO_INTEGRACAO");

                entity.HasOne(d => d.CodProdutoFastorderNavigation)
                    .WithMany(p => p.TbProdutoIntegracao)
                    .HasForeignKey(d => d.CodProdutoFastorder)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TB_PRODUT__COD_P__5070F446");

                entity.HasOne(d => d.CodTipoIntegracaoNavigation)
                    .WithMany(p => p.TbProdutoIntegracao)
                    .HasForeignKey(d => d.CodTipoIntegracao)
                    .HasConstraintName("FK__TB_PRODUT__COD_T__5165187F");
            });

            modelBuilder.Entity<TbStatusPedido>(entity =>
            {
                entity.HasKey(e => e.CodStatusPedido)
                    .HasName("PK__TB_STATU__F8783C0BA4925CD6");

                entity.ToTable("TB_STATUS_PEDIDO");

                entity.Property(e => e.CodStatusPedido).HasColumnName("COD_STATUS_PEDIDO");

                entity.Property(e => e.DescStatusPedido)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DESC_STATUS_PEDIDO");
            });

            modelBuilder.Entity<TbTipoIntegracao>(entity =>
            {
                entity.HasKey(e => e.CodTipoIntegracao)
                    .HasName("PK__TB_TIPO___E7CCB0D693C39163");

                entity.ToTable("TB_TIPO_INTEGRACAO");

                entity.Property(e => e.CodTipoIntegracao).HasColumnName("COD_TIPO_INTEGRACAO");

                entity.Property(e => e.DescTipoIntegracao)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DESC_TIPO_INTEGRACAO");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}